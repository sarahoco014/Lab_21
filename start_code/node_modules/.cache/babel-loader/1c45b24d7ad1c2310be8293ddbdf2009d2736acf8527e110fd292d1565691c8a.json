{"ast":null,"code":"var _jsxFileName = \"/Users/sarahoconnor/Documents/bnta_work/week_10/day_01/Lab_20/start_code/src/cake/CakeContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Cake from \"./Cake\";\nimport CakeForm from \"./CakeForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CakeContainer = () => {\n  _s();\n  const [Cakes, setCakes] = useState([{\n    cakeName: \"Victoria Sponge\",\n    ingredients: [\"eggs\", \"butter\", \"sugar\", \"self-raising flour\", \"baking powder\", \"milk\"],\n    price: 5,\n    rating: 5\n  }, {\n    cakeName: \"Tea Loaf\",\n    ingredients: [\"eggs\", \"oil\", \"dried fruit\", \"sugar\", \"self-raising flour\", \"strong tea\"],\n    price: 2,\n    rating: 3\n  }, {\n    cakeName: \"Carrot Cake\",\n    ingredients: [\"carrots\", \"walnuts\", \"oil\", \"cream cheese\", \"flour\", \"sugar\"],\n    price: 8,\n    rating: 5\n  }]);\n  const addCake = newCake => {\n    setCakes([...Cakes, newCake]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"abc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CakeForm, {\n      onAddCake: addCake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), Cakes.map((cake, index) => /*#__PURE__*/_jsxDEV(Cake, {\n      cake: cake\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(CakeContainer, \"u9laEiSd/XCe4Vbbwm1jT2lJDbk=\");\n_c = CakeContainer;\nexport default CakeContainer;\nvar _c;\n$RefreshReg$(_c, \"CakeContainer\");","map":{"version":3,"names":["React","useState","Cake","CakeForm","jsxDEV","_jsxDEV","CakeContainer","_s","Cakes","setCakes","cakeName","ingredients","price","rating","addCake","newCake","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddCake","map","cake","index","_c","$RefreshReg$"],"sources":["/Users/sarahoconnor/Documents/bnta_work/week_10/day_01/Lab_20/start_code/src/cake/CakeContainer.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Cake from \"./Cake\";\nimport CakeForm from \"./CakeForm\";\n\nconst CakeContainer = () => {\n  const [Cakes, setCakes] = useState([\n    {\n      cakeName: \"Victoria Sponge\",\n      ingredients: [\n        \"eggs\",\n        \"butter\",\n        \"sugar\",\n        \"self-raising flour\",\n        \"baking powder\",\n        \"milk\",\n      ],\n      price: 5,\n      rating: 5,\n    },\n    {\n      cakeName: \"Tea Loaf\",\n      ingredients: [\n        \"eggs\",\n        \"oil\",\n        \"dried fruit\",\n        \"sugar\",\n        \"self-raising flour\",\n        \"strong tea\",\n      ],\n      price: 2,\n      rating: 3,\n    },\n    {\n      cakeName: \"Carrot Cake\",\n      ingredients: [\n        \"carrots\",\n        \"walnuts\",\n        \"oil\",\n        \"cream cheese\",\n        \"flour\",\n        \"sugar\",\n      ],\n      price: 8,\n      rating: 5,\n    },\n  ]);\n\n  const addCake = (newCake) => {\n    setCakes([...Cakes, newCake]);\n  };\n\n  return (\n    <div>\n      <h1>abc</h1>\n      <CakeForm onAddCake={addCake} />\n      {Cakes.map((cake, index) => (\n        <Cake key={index} cake={cake} />\n      ))}\n    </div>\n  );\n};\n\nexport default CakeContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CACjC;IACES,QAAQ,EAAE,iBAAiB;IAC3BC,WAAW,EAAE,CACX,MAAM,EACN,QAAQ,EACR,OAAO,EACP,oBAAoB,EACpB,eAAe,EACf,MAAM,CACP;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC,EACD;IACEH,QAAQ,EAAE,UAAU;IACpBC,WAAW,EAAE,CACX,MAAM,EACN,KAAK,EACL,aAAa,EACb,OAAO,EACP,oBAAoB,EACpB,YAAY,CACb;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC,EACD;IACEH,QAAQ,EAAE,aAAa;IACvBC,WAAW,EAAE,CACX,SAAS,EACT,SAAS,EACT,KAAK,EACL,cAAc,EACd,OAAO,EACP,OAAO,CACR;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC,CACF,CAAC;EAEF,MAAMC,OAAO,GAAIC,OAAO,IAAK;IAC3BN,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEO,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZf,OAAA,CAACF,QAAQ;MAACkB,SAAS,EAAEP;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/BZ,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBnB,OAAA,CAACH,IAAI;MAAaqB,IAAI,EAAEA;IAAK,GAAlBC,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACb,EAAA,CAxDID,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AA0DnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}