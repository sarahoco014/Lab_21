{"ast":null,"code":"var _jsxFileName = \"/Users/sarahoconnor/Documents/bnta_work/week_10/day_01/Lab_20/start_code/src/cake/Cake.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cake = _ref => {\n  let {\n    cake\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: cake.cakeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ingredients:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cake.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingredient\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \", cake.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", cake.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = Cake;\nexport default Cake;\nvar _c;\n$RefreshReg$(_c, \"Cake\");","map":{"version":3,"names":["Cake","_ref","cake","_jsxDEV","_Fragment","children","cakeName","fileName","_jsxFileName","lineNumber","columnNumber","ingredients","map","ingredient","index","price","rating","_c","$RefreshReg$"],"sources":["/Users/sarahoconnor/Documents/bnta_work/week_10/day_01/Lab_20/start_code/src/cake/Cake.js"],"sourcesContent":["const Cake = ({cake}) => {\n\n  return (\n    <>\n        <h2>{cake.cakeName}</h2>\n        <p>Ingredients:\n        <ul>\n          {cake.ingredients.map((ingredient, index) => (\n            <li key={index}>{ingredient}</li>\n          ))}\n          </ul>\n        </p>\n        <p>Price: {cake.price}</p>\n        <p>Rating: {cake.rating}</p>\n    </>\n  )\n}\n\nexport default Cake;"],"mappings":";;;AAAA,MAAMA,IAAI,GAAGC,IAAA,IAAY;EAAA,IAAX;IAACC;EAAI,CAAC,GAAAD,IAAA;EAElB,oBACEE,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAKH,IAAI,CAACI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBP,OAAA;MAAAE,QAAA,GAAG,cACH,eAAAF,OAAA;QAAAE,QAAA,EACGH,IAAI,CAACS,WAAW,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACtCX,OAAA;UAAAE,QAAA,EAAiBQ;QAAU,GAAlBC,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACJP,OAAA;MAAAE,QAAA,GAAG,SAAO,EAACH,IAAI,CAACa,KAAK;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BP,OAAA;MAAAE,QAAA,GAAG,UAAQ,EAACH,IAAI,CAACc,MAAM;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAC9B,CAAC;AAEP,CAAC;AAAAO,EAAA,GAhBKjB,IAAI;AAkBV,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}